/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SinhVien;

import Check.Check;
import LopHoc.ILopHocDAO;
import LopHoc.LopHoc;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author BKHN
 */
public class frmSinhVien extends javax.swing.JPanel {
    
    private DefaultTableModel dtm;
    private DefaultComboBoxModel dcbm;
    ArrayList<LopHoc> allClass = null;
    ArrayList<SinhVien> list = null;
    public static String regexDDMMYYYY = "^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d$";

    /**
     * Creates new form frmSinhVien
     */
    public frmSinhVien() {
        try {
            initComponents();
            dcbm = new DefaultComboBoxModel();
            dtm = new DefaultTableModel();
            ILopHocDAO lopHocDAO = (ILopHocDAO) Class.forName("LopHoc.LopHocDAO").newInstance();
            allClass = lopHocDAO.getAll();
            for (LopHoc lh : allClass) {
                dcbm.addElement(lh.getMalop());
            }
            jcblop.setModel(dcbm);
            
            dtm.addColumn("ID");
            dtm.addColumn("Họ Tên");
            dtm.addColumn("ID Lớp");
            dtm.addColumn("Hệ ĐT");
            dtm.addColumn("Ngày Sinh");
            dtm.addColumn("Địa Chỉ");
            dtm.addColumn("Giới Tính");
            dtm.addColumn("Số ĐT");
            loaddata();
        } catch (InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
            Logger.getLogger(frmSinhVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbTTSV = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfMaSV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfngaysinh = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfHoTen = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtfDiaChi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jcblop = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jrbsex = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jtfHeDaoTao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfDienThoai = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jbAdd = new javax.swing.JButton();
        jbUpdate = new javax.swing.JButton();
        jbDelete = new javax.swing.JButton();
        jbExit = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 102, 0));
        setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        setPreferredSize(new java.awt.Dimension(863, 372));

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jPanel2.setBackground(new java.awt.Color(255, 102, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THÔNG TIN SINH VIÊN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 102, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jtbTTSV = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        jtbTTSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sinh Viên", "Họ Tên", "Mã Lớp", "Hệ ĐT", "Ngày Sinh", "Địa Chỉ ", "Giới Tính ", "Số ĐT"
            }
        ));
        jtbTTSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jtbTTSVMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtbTTSV);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 102, 0));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel4.setLayout(new java.awt.GridLayout(4, 4));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Mã Sinh Viên");
        jPanel4.add(jLabel2);
        jPanel4.add(jtfMaSV);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Ngày Sinh ");
        jPanel4.add(jLabel4);

        jtfngaysinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfngaysinhActionPerformed(evt);
            }
        });
        jPanel4.add(jtfngaysinh);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Họ Tên ");
        jPanel4.add(jLabel5);
        jPanel4.add(jtfHoTen);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Địa Chỉ");
        jPanel4.add(jLabel8);
        jPanel4.add(jtfDiaChi);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Lớp");
        jPanel4.add(jLabel6);

        jcblop.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel4.add(jcblop);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Giới Tính ");
        jPanel4.add(jLabel9);

        jrbsex.setText("Nam/Nữ");
        jPanel4.add(jrbsex);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Hệ Đào Tạo ");
        jPanel4.add(jLabel7);
        jPanel4.add(jtfHeDaoTao);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Điện Thoại");
        jPanel4.add(jLabel3);
        jPanel4.add(jtfDienThoai);

        jPanel5.setBackground(new java.awt.Color(255, 102, 0));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel5.setLayout(new java.awt.GridLayout(4, 1));

        jbAdd.setBackground(new java.awt.Color(255, 153, 153));
        jbAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbAdd.setForeground(new java.awt.Color(0, 0, 204));
        jbAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/new.png"))); // NOI18N
        jbAdd.setText("AddNew");
        jbAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddActionPerformed(evt);
            }
        });
        jPanel5.add(jbAdd);

        jbUpdate.setBackground(new java.awt.Color(0, 204, 204));
        jbUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/save.png"))); // NOI18N
        jbUpdate.setText("Update");
        jbUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateActionPerformed(evt);
            }
        });
        jPanel5.add(jbUpdate);

        jbDelete.setBackground(new java.awt.Color(255, 255, 153));
        jbDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbDelete.setForeground(new java.awt.Color(204, 0, 0));
        jbDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/delete.png"))); // NOI18N
        jbDelete.setText("Delete");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });
        jPanel5.add(jbDelete);

        jbExit.setBackground(new java.awt.Color(102, 255, 102));
        jbExit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbExit.setForeground(new java.awt.Color(0, 51, 51));
        jbExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/reset.png"))); // NOI18N
        jbExit.setText("Reset");
        jbExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExitActionPerformed(evt);
            }
        });
        jPanel5.add(jbExit);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 863, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
private void loaddata() {
        try {
            ISinhVienDAO sinhVienDAO = (ISinhVienDAO) Class.forName("SinhVien.SinhVienDAO").newInstance();
            list = new SinhVienDAO().getAll();
            list.forEach((sv) -> {
                dtm.addRow(toObjectData(sv));
            });
            jtbTTSV.setModel(dtm);
        } catch (InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
            Logger.getLogger(frmSinhVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    private void jtfngaysinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfngaysinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfngaysinhActionPerformed

    private void jtbTTSVMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTTSVMouseReleased
        // TODO add your handling code here:
        jtfMaSV.setText(jtbTTSV.getValueAt(jtbTTSV.getSelectedRow(), 0).toString());
        jtfHoTen.setText(jtbTTSV.getValueAt(jtbTTSV.getSelectedRow(), 1).toString());
        jcblop.setSelectedItem(jtbTTSV.getValueAt(jtbTTSV.getSelectedRow(), 2).toString());
        jtfHeDaoTao.setText(jtbTTSV.getValueAt(jtbTTSV.getSelectedRow(), 3).toString());
        jtfngaysinh.setText(jtbTTSV.getValueAt(jtbTTSV.getSelectedRow(), 4).toString());
        // jdate.setDateFormatString(jtbTTSV.getValueAt(jtbTTSV.getSelectedRow(), 4).toString());
        jtfDiaChi.setText(jtbTTSV.getValueAt(jtbTTSV.getSelectedRow(), 5).toString());
        jtfDienThoai.setText(jtbTTSV.getValueAt(jtbTTSV.getSelectedRow(), 7).toString());
        String sex = jtbTTSV.getValueAt(jtbTTSV.getSelectedRow(), 6).toString();
        if (sex.equals("true")) {
            jrbsex.setSelected(true);
        } else {
            jrbsex.setSelected(false);
        }
        jbAdd.setEnabled(false);
        jbUpdate.setEnabled(true);
        jbDelete.setEnabled(true);
        jtfMaSV.setEnabled(false);
    }//GEN-LAST:event_jtbTTSVMouseReleased

    private void jbAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddActionPerformed
        // TODO add your handling code here:
        String masv = jtfMaSV.getText();
        String tensv = jtfHoTen.getText();
        String hedt = jtfHeDaoTao.getText();
        String diachi = jtfDiaChi.getText();
        String sdt = jtfDienThoai.getText();
        String ngaysinh = jtfngaysinh.getText();
        boolean gioitinh = jrbsex.isSelected();
        String malop = allClass.get(jcblop.getSelectedIndex()).getMalop();
        Check c = new Check();
        if (!checkinfo()) {
            return;
        }
        
        Date d = null;
        if (ngaysinh == null || ngaysinh.equals("") || !ngaysinh.matches(regexDDMMYYYY)) {
            JOptionPane.showMessageDialog(this, "Lỗi ngày sinh", "Hãy nhập lại", JOptionPane.ERROR_MESSAGE);
            // JOptionPane.showMessageDialog(null, "Lỗi ngày sinh");
            jtfngaysinh.setText("");
            jtfngaysinh.requestFocus();
            return;
        } else {
            try {
                d = new SimpleDateFormat("dd/MM/yyyy").parse(ngaysinh);
            } catch (ParseException ex) {
                Logger.getLogger(frmSinhVien.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }
        SinhVien sinhVien = new SinhVien(masv, tensv, malop, diachi, hedt, d, gioitinh, sdt);
        ArrayList<SinhVien> listCheck = new SinhVienDAO().CheckID(masv);
        if (listCheck.size() > 0) {
            JOptionPane.showMessageDialog(this, "Mã ID bị trùng. Vui lòng kiểm tra lại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            jtfMaSV.setText("");
            jtfMaSV.requestFocus();
        } else {
            
            SinhVien insert = new SinhVienDAO().addNew(sinhVien);
            
            if (insert != null) {
                
                showAll();
            }
        }

//        else{
//        JOptionPane.showMessageDialog(this, "Mã ID bị trùng", "vui lòng kiểm tra lại", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_jbAddActionPerformed

    private void jbUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUpdateActionPerformed
        // TODO add your handling code here:
        String masv = jtfMaSV.getText();
        String tensv = jtfHoTen.getText();
        String hedt = jtfHeDaoTao.getText();
        String diachi = jtfDiaChi.getText();
        String sdt = jtfDienThoai.getText();
        String ngaysinh = jtfngaysinh.getText();
        // String ngaysinh = jdate.getDateFormatString();
        // String strPattern = "[^a-z ]";
        boolean gioitinh = jrbsex.isSelected();
        
        String malop = allClass.get(jcblop.getSelectedIndex()).getMalop();
        
        Check c = new Check();
        if (!checkinfo()) {
            return;
        }
        
        Date d = null;
        if (ngaysinh == null || ngaysinh.equals("") || !ngaysinh.matches(regexDDMMYYYY)) {
            JOptionPane.showMessageDialog(this, "Lỗi ngày sinh", "Hãy nhập lại", JOptionPane.ERROR_MESSAGE);
            // JOptionPane.showMessageDialog(null, "Lỗi ngày sinh");
            jtfngaysinh.setText("");
            jtfngaysinh.requestFocus();
            return;
        } else {
            try {
                d = new SimpleDateFormat("dd/MM/yyyy").parse(ngaysinh);
            } catch (ParseException ex) {
                Logger.getLogger(frmSinhVien.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }
        
        SinhVien sinhVien = new SinhVien(masv, tensv, malop, diachi, hedt, d, gioitinh, sdt);
        SinhVien updateByID = new SinhVienDAO().updateByID(sinhVien);
        if (updateByID != null) {
            showAll();
        }
        jbAdd.setEnabled(true);
        jbUpdate.setEnabled(false);
        jbDelete.setEnabled(false);
        jtfMaSV.setEnabled(true);
    }//GEN-LAST:event_jbUpdateActionPerformed
    private static Object[] toObjectData(SinhVien sv) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String date = dateFormat.format(sv.getNgaysinh());
        
        boolean flag = sv.isGioitinh();
        String gioitinh = "Nam";
        if (!flag) {
            gioitinh = "Nữ";
        }
        Object[] objectData = {sv.getMasv(), sv.getTensv(), sv.getMalop(),
            sv.getHedaotao(), date, sv.getDiachi(), gioitinh, sv.getSodt()};
        return objectData;
    }
    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteActionPerformed
        // TODO add your handling code here:
        int b = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn muốn xóa dữ liệu này?", "Thông Báo", JOptionPane.YES_NO_OPTION);
        if (b == JOptionPane.YES_OPTION) {
            try {
                
                String masv = jtfMaSV.getText();
                new SinhVienDAO().deleteIDSinhVien(masv);
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Sinh viên này có điểm, hãy xóa điểm của sinh viên này trước", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
            while (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
                
            }
            loaddata();
            resetForm();
            jbAdd.setEnabled(true);
            jbUpdate.setEnabled(false);
            jbDelete.setEnabled(false);
            jtfMaSV.setEnabled(true);
        }
    }//GEN-LAST:event_jbDeleteActionPerformed
    public void resetForm() {
        jtfMaSV.setText("");
        jtfHoTen.setText("");
        jtfDienThoai.setText("");
        jtfDiaChi.setText("");
        jtfHeDaoTao.setText("");
        jtfngaysinh.setText("");
        jtfMaSV.requestFocus();
    }
    private void jbExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExitActionPerformed
        // TODO add your handling code here:
        this.resetForm();
    }//GEN-LAST:event_jbExitActionPerformed
    
    private void showAll() {
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
            
        }
        int selectedIndex = jcblop.getSelectedIndex();
        LopHoc getLopHoc = allClass.get(selectedIndex);
        ArrayList<SinhVien> svs = new SinhVienDAO().findByIDLop(getLopHoc.getMalop());
        //ArrayList<SinhVien> sinhViens = new SinhVienDAO().CheckID(g)
        svs.stream().map((SinhVien sv) -> {
            Vector vector = new Vector();
            vector.add(sv.getMasv());
            vector.add(sv.getTensv());
            vector.add(sv.getMalop());
            vector.add(sv.getHedaotao());
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            vector.add(dateFormat.format(sv.getNgaysinh()));
            vector.add(sv.getDiachi());
            // vector.add(sv.isGioitinh());
            if (sv.isGioitinh() == true) {
                vector.add("Nam");
            } else {
                vector.add("Nữ");
            }
            vector.add(sv.getSodt());
            return vector;
        }).forEachOrdered((vector) -> {
            dtm.addRow(vector);
        });
        resetForm();
    }
    
    public boolean checkinfo() {
        Check c = new Check();
        if (!Check.checkID(jtfMaSV.getText())) {
            JOptionPane.showMessageDialog(this, "Nhập mã sai", "Hãy nhập lại", JOptionPane.ERROR_MESSAGE);
            jtfMaSV.setText("");
            jtfMaSV.requestFocus();
            return false;
        } else if (!Check.checkSpace(jtfHoTen.getText()) || !Check.check(jtfHoTen.getText())) {
            JOptionPane.showMessageDialog(this, "Nhập tên sai", "Hãy nhập lại", JOptionPane.ERROR_MESSAGE);
            jtfHoTen.setText("");
            jtfHoTen.requestFocus();
            return false;
            
        } else if (!Check.checkSpace(jtfHeDaoTao.getText()) || !Check.check(jtfHeDaoTao.getText())) {
            JOptionPane.showMessageDialog(this, "Kiểm tra lại nhập hệ đào tạo", "Hãy nhập lại", JOptionPane.ERROR_MESSAGE);
            jtfHeDaoTao.setText("");
            jtfHeDaoTao.requestFocus();
            return false;
            
      //  } else if (!c.checkSpace(jtfngaysinh.getText()) || !c.check(jtfHeDaoTao.getText()) || !c.checkDate(jtfngaysinh.getText())) {
        //    JOptionPane.showMessageDialog(this, "Kiểm tra lại ngày sinh", "Hãy nhập lại", JOptionPane.ERROR_MESSAGE);
         //   jtfngaysinh.setText("");
          //  jtfngaysinh.requestFocus();
          //  return false;
        } else if (!Check.checkSpace(jtfDiaChi.getText())) {
            JOptionPane.showMessageDialog(this, "Nhập địa chỉ sai", "Hãy nhập lại", JOptionPane.ERROR_MESSAGE);
            jtfDiaChi.setText("");
            jtfDiaChi.requestFocus();
            return false;
            
        } else if (!Check.checkSpace(jtfDienThoai.getText()) || !c.checkPhone(jtfDienThoai.getText())) {
            JOptionPane.showMessageDialog(this, "Nhập số điện thoại sai", "Hãy nhập lại", JOptionPane.ERROR_MESSAGE);
            jtfDienThoai.setText("");
            jtfDienThoai.requestFocus();
            return false;
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAdd;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbExit;
    private javax.swing.JButton jbUpdate;
    private javax.swing.JComboBox jcblop;
    private javax.swing.JRadioButton jrbsex;
    private javax.swing.JTable jtbTTSV;
    private javax.swing.JTextField jtfDiaChi;
    private javax.swing.JTextField jtfDienThoai;
    private javax.swing.JTextField jtfHeDaoTao;
    private javax.swing.JTextField jtfHoTen;
    private javax.swing.JTextField jtfMaSV;
    private javax.swing.JTextField jtfngaysinh;
    // End of variables declaration//GEN-END:variables
}
